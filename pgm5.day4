import pandas as pd
from sklearn.model_selection import train_test_split
from xgboost import XGBRegressor
from sklearn.metrics import mean_squared_error, r2_score

# Load dataset
data = pd.read_csv("sales_data.csv")

# Data preprocessing
# Assuming 'date' column is available and needs to be converted to datetime format
data['date'] = pd.to_datetime(data['date'])

# Assuming 'month', 'year' columns are extracted from the 'date' column
data['month'] = data['date'].dt.month
data['year'] = data['date'].dt.year

# Assuming 'item_price' and 'item_cnt_day' are relevant features for sales prediction
X = data[['month', 'year', 'item_price']]
y = data['item_cnt_day']

# Splitting the dataset into the Training set and Test set
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize XGBoost regressor
xgb_model = XGBRegressor()

# Train the regressor
xgb_model.fit(X_train, y_train)

# Predicting the sales for the test data
y_pred = xgb_model.predict(X_test)

# Model evaluation
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print("Mean Squared Error:", mse)
print("R^2 Score:", r2)
